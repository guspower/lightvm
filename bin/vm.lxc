#!/bin/bash

function lxc.createContainer() {
    local host=$1
    local ip=$2
    local gw=$3
    local masknum=$4
    local pw=$5
    local profile=$6

    __getLxcCreateCommand

    if [ "$profile" != "" ];
    then
        local profiledir=$profile
        if [ ! -d "$profiledir" ];
        then
            profiledir="$vmdir/$profile"
        fi
    fi

    if [ -d "$profiledir" ];
    then
        local uniondir="$vmdir/.$host"
        $mode mkdir -p $hostdir
        $mode mkdir -p $uniondir
        $mode mount -t aufs -o br=$uniondir=rw:$profiledir=ro none $hostdir

        $mode echo "mount | grep -q $hostdir" >> ${modelog:-$hoststartpre}
        $mode echo -e 'if [ $? -ne 0 ];\nthen' >> ${modelog:-$hoststartpre}
        $mode echo mount -t aufs -o br=$uniondir=rw:$profiledir=ro none $hostdir >> ${modelog:-$hoststartpre}
        $mode echo fi >> ${modelog:-$hoststartpre}
        $mode echo umount $hostdir >> ${modelog:-$hoststoppost}

        $mode cp "$confdir/$profile.conf" $hostconf
        $mode sed -i "s/$profile/$host/g" $hostconf

        lxc.updateContainerNetworkConfig $ip $masknum $gw
        gentoo.updateNetworkConfig $host $ip $gw $masknum
    else
        $mode $lxccreate create -q -i "$ip/$masknum" -g $gw -n $host -u $host -a amd64 -p $pw &>> ${modelog:-$hostlog}
        $mode mv $vmdir/${host}.conf $hostconf
    fi
}

function lxc.cloneContainer() {
    local fromhost=$1
    local tohost=$2

    $mode cp $confdir/${fromhost}.conf $confdir/${tohost}.conf
    $mode cp $confdir/${fromhost}.start.post $confdir/${tohost}.start.post
    $mode cp $confdir/${fromhost}.start.pre $confdir/${tohost}.start.pre
    $mode cp $confdir/${fromhost}.stop.post $confdir/${tohost}.stop.post
    $mode cp $confdir/${fromhost}.stop.pre $confdir/${tohost}.stop.pre
    $mode sed -i "s/$fromhost/$tohost/g" $confdir/${tohost}.*

    local fromdir=$vmdir/$fromhost
    if [ -h $vmdir/$fromhost ];
    then
        fromdir=`readlink $fromdir`
    fi
    $mode cp -a $fromdir $vmdir/$tohost

    lxc.updateContainerNetworkConfig $ip $masknum $gw
}

function lxc.updateContainerNetworkConfig() {
    local containerip=$1
    local containermasknum=$2
    local containergw=$3

    $mode sed -i "s,(lxc.network.ipv4 =).*,\1 $containerip/$containermasknum,g" $hostconf
    $mode sed -i "s,(lxc.network.ipv4.gateway =).*,\1 $containergw,g" $hostconf
}

function lxc.startContainer() {
    local host=$1
    local conf=$2
    local log=$3

    if [ -f $hoststartpre ];
    then
        $mode . $hoststartpre &>> ${modelog:-$hostlog}
    fi

    local lxcstartcmd=$(__getLxcStartCommandLine $host $conf $log)

    $mode $lxcstartcmd &>> ${modelog:-$log}

    if [ -f $hoststartpost ];
    then
        $mode . $hoststartpost &>> ${modelog:-$hostlog}
    fi
}

function lxc.stopContainer() {
    local host=$1

    if [ -f $hoststoppre ];
    then
        $mode . $hoststoppre &>> ${modelog:-$hostlog}
    fi

	local lxcstopcmd=$(__getLxcStopCommandLine $host)
    $mode $lxcstopcmd

    if [ -f $hoststoppost ];
    then
        $mode . $hoststoppost &>> ${modelog:-$hostlog}
    fi
}

function lxc.containerSummary() {
    local host=$1
    local conf=$2
    local log=$3

    echo -e "\tconfig: $conf"
	echo -e "\tlog   : $log"
	echo -e "\tstart : $(__getLxcStartCommandLine $host $conf $log)"
	echo -e "\tstop  : $(__getLxcStopCommandLine $host)"
}

function __getLxcStartCommandLine() {
    local host=$1
    local conf=$2
    local log=$3

	local lxcstart=${lxcstart:-"lxc-start"}

	echo "$lxcstart -d -o $log -l DEBUG -n $host -f $conf"
}

function __getLxcStopCommandLine() {
    local host=$1

	local lxcstop=${lxcstop:-"lxc-stop"}

	echo "$lxcstop -n $host"
}

function __getLxcCreateCommand() {
    lxccreate=${lxccreate:-"$vmdir/.gentoo/lxc-gentoo"}
    if [ "$lxccreate" == "$vmdir/.gentoo/lxc-gentoo" ]
    then
        if [ ! -f "$lxccreate" ]
        then
            scm.git clone git://github.com/globalcitizen/lxc-gentoo.git "$vmdir/.gentoo"
        fi
    fi
}